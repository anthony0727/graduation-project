O 0
O 1

L 0 0 5 c t
L 1 1 5 c t

L 1 0 3 c t
L 1 0 3 c f
L 0 1 3 c t

T 0
T 1

C 0
C 1
Q



--------------------------- script.30 ---------------------------

The main actions here are:
  a) transaction 0 asks for a lock on file 0 in X mode. The lock can be
     granted immediatly.
  b) transaction 1 asks for a lock on file 1 in S mode. The lock can be
     granted immediatly. 
  c) transaction 1 asks for a lock on file 0. the lock is not granted
     because transaction 1 would have to wait. 
  d) transaction 1 asks for a lock on file 0, and waits.
  e) transaction 0 asks for a lock on file 0. the lock is not granted
     because transaction 1 would produce a deadlock.



The detailed description of each command line is:

 open_trans(trans 0)
 open_trans(trans 1)

 lock_file(trans 0, file 0, mode X, duration COMMIT, cond True)
 lock_file(trans 1, file 1, mode X, duration COMMIT, cond True)

 lock_file(trans 1, file 0, mode S, duration COMMIT, cond True)
 lock_file(trans 1, file 0, mode S, duration COMMIT, cond False)
 lock_file(trans 0, file 1, mode S, duration COMMIT, cond True)

 look at state of transaction 0
 look at state of transaction 1

 commit(trans 0)
 commit(trans 1)
 quit



The expected output (so as to perform a "diff" with the next 
execution output) is:
-------------------------------------------------
O 0
--> 1

O 1
--> 1

L 0 0 5 c t
--> 0

L 1 1 5 c t
--> 0

L 1 0 3 c t
--> -1750

L 1 0 3 c f
--> -1550

L 0 1 3 c t
--> -1650

T 0
--> Trans 0 is owning:
   . File 0 (lock X)
           . lock X granted to trans 0
           . lock S waited by trans 1 - duration 2
 No lock waited by trans. 0

T 1
--> Trans 1 is owning:
   . File 1 (lock X)
           . lock X granted to trans 1
 And is waiting for:
   . File 0 (lock X)
           . lock X granted to trans 0
           . lock S waited by trans 1 - duration 2

C 0
-->(walkfile) transaction 1 can restart!

C 1
Q
-------------------------------------------------
